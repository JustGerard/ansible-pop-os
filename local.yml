- hosts: localhost
  become: no

  vars_prompt:
    - name: "local_user"
      prompt: "username"
      private: no

  vars:
    local_home: "/home/{{ local_user }}"
    gnome_extensions:
      - 615 # AppIndicator
      - 779 # Clipboard Indicator
      - 15  # AlternateTab

  tasks:
  - name: Install aptitude using apt
    apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
    become: yes
 
  - name: Install packages
    apt: name={{item}}
    become: yes
    with_items:
      - htop
      - tmux
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - curl
      - zsh
      - git
      - python3-pip
      - guake
      - gnome-tweaks
      - neofetch

  - name: Add deadsnakes repo
    apt_repository: repo="ppa:deadsnakes/ppa"
    become: yes

  - name: Add Docker GPG apt key
    become: yes
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
        
  - name: Add Docker repo
    become: yes
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release}} stable
      state: present

  - name: Install python
    apt: update_cache=yes name="python{{item}}-dev" state=present
    become: yes
    with_items:
      - "3.6"
      - "3.8"
      - "3.10"

  - name: Install docker
    become: yes
    apt: update_cache=yes name="docker-ce" state=latest

  - name: Create docker group
    become: yes
    group:
      name: "docker"
      state: present
  
  - name: Debug
    debug:
      msg: "LOCAL USER: {{ local_user }}"

  - name: Add user to docker group
    become: yes
    user:
      name: "{{ local_user }}"
      groups: "docker"
      append: yes
      shell: /usr/bin/zsh

  - name: Change shell to zsh
    command: "chsh -s /usr/bin/zsh {{ local_user }}"
    become: yes

  - name: Install docker-compose
    get_url:
      url: https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
      dest: /usr/local/bin/docker-compose
      mode: 'u+x,g+x'

  - name: Test if oh-my-zsh is present
    become_user: "{{ local_user }}"
    stat:
      path: "{{ local_home }}/.oh-my-zsh"
    register: ohmyzsh

  - name: Install oh-my-zsh
    become_user: "{{ local_user }}"
    shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    when: not ohmyzsh.stat.exists

  - name: Install p10k
    become_user: "{{ local_user }}"
    git:
      repo: https://github.com/romkatv/powerlevel10k.git
      depth: 1 
      clone: yes
      dest: "{{ local_home }}/.oh-my-zsh/custom/themes/powerlevel10k"

  - name: Install zsh-autosuggestions
    become_user: "{{ local_user }}"
    git:
      repo: https://github.com/zsh-users/zsh-autosuggestions
      clone: yes
      dest: "{{ local_home }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
 
  - name: Install zsh plugins requirements
    pip:
      name: 
        - thefuck
        - virtualenvwrapper

  - name: Copy configs
    become_user: "{{ local_user }}"
    copy:
      src: "{{ item }}"
      dest: "{{ local_home }}/"
    with_items:
      - "./.p10k.zsh"
      - "./.zshrc"
    when: not ohmyzsh.stat.exists

  - name: Add guake to autostart
    copy:
      src: "./guake.desktop"
      dest: "{{ local_home }}/.config/autostart/"

  - name: Install VSC
    apt:
      deb: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64

  - name: Download gnome extension installer
    get_url:
      url: https://github.com/brunelli/gnome-shell-extension-installer/raw/master/gnome-shell-extension-installer
      dest: /usr/bin/gnome-shell-extension-installer
      mode: 'u+x,g+x'

  - name: Install clipboard
    command: "gnome-shell-extension-installer {{ item }}"
    with_items: "{{ gnome_extensions }}"
    become: yes
